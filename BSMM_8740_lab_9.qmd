---
title: "Lab 9 - Elasticities by regression"
editor: visual
reference-location: margin
---

## Introduction

In today's lab, you'll practice estimating elasticities.

## Getting started

-   Log in to **your** github account and then go to the [GitHub organization](https://github.com/bsmm-8740-fall-2023) for the course and find the **BSMM-lab-9-\[your github username\]** repository to complete the lab.

    Create an R project using your **BSMM-lab-9-\[your github username\]** repository (remember to create a PAT, etc., as in lab-1) and add your answers by editing the `BSMM-lab-9.qmd` file in your repository.

-   When you are done, be sure to: **save** your document, **stage**, **commit** and [**push**]{.underline} your work.

::: callout-important
To access Github from the lab, you will need to make sure you are logged in as follows:

-   username: **.\\daladmin**
-   password: **Business507!**

Remember to (create a PAT and set your git credentials)

-   create your PAT using `usethis::create_github_token()` ,
-   store your PAT with `gitcreds::gitcreds_set()` ,
-   set your username and email with
    -   `usethis::use_git_config( user.name = ___, user.email = ___)`
:::

## Packages

```{r}
#| message: false
library(tidyverse)
library(broom)
library(magrittr)   # the pipe
library(ggplot2)    # for plotting
# set the efault theme for plotting
theme_set(theme_bw(base_size = 18) + theme(legend.position = "top"))
```

## Data

Today we will work with price-demand data to estimate elasticities. The data is in your data directory.

```{r}
dat <- readr::read_csv('data/price_volume_data.csv', show_col_types = FALSE)

dat
```

## Exercise 1: estimate elasticity

Use the code below to estimate the elasticity from the price-volume data.

\(1\) list the product names

```{r}
# create a list of product names

product_names <- dat %>% 
  dplyr::distinct(prod_name) %>% 
  tibble::rowid_to_column("List ID")

product_names
```

\(2\) create a function to run the regression(s)

```{r}
#' fit_elasticity
#'
#' @param x : as string - the product name
#'
#' @return  : a tibble with columns - model, (Intercept), elasticity, logLik, AIC, BIC, deviance
#'
#' @examples fit_elasticity('HyperionDrive')
#' @note assumes the price-volume data is available in the dat data.frame
#' 
fit_elasticity <- function(x){
  # fit the linear model
  m0 <- dat %>% dplyr::filter(prod_name == x) %>%
    lm(log(volume) ~ log(volume_weighted_price), data = .)
  
  # fit the poisson model
  m1 <- dat %>% dplyr::filter(prod_name == x) %>% 
    glm(volume ~ log(volume_weighted_price), family = 'poisson', data = .)
  
  tibble::tibble(fits = list(gaussian = m0, poisson = m1) ) %>% 
    dplyr::mutate(
      results =
        purrr::imap(
          fits
          , function(x,y){
            x %>% 
              broom::tidy() %>% 
              dplyr::select(term,estimate) %>% 
              tidyr::pivot_wider(names_from = term, values_from = estimate) %>% 
              dplyr::rename(elasticity = 2) %>% 
              dplyr::bind_cols(
                x %>% 
                  broom::glance() %>% 
                  dplyr::select(c(logLik, AIC, BIC, deviance))
              ) %>% 
              dplyr::mutate(model = y, .before =1)
          }
        )
    ) %>% 
    dplyr::select(results) %>% 
    tidyr::unnest(results) 
}
```

\(3\) apply the function to the data for each product and compute & save the elasticities:

```{r}
product_names  %>% 
  dplyr::mutate(
    coef = 
      purrr::map(
        prod_name
        , fit_elasticity
      )
  ) %>% 
  tidyr::unnest(coef) %>% 
  readr::write_csv("results/Price Elasticity Regression Results.csv")
```

## Exercise 2: validate elasticities

\(1\) first, read the results

```{r}
elasticity_dat <- 
  readr::read_csv(
    "results/Price Elasticity Regression Results.csv"
    , show_col_types = FALSE
  )

elasticity_dat
```

\(2\) add a column for the sign of the elasticity.

```{r}
results_pm <- elasticity_dat %>% dplyr::mutate(elasticity_sign = sign(elasticity))
results_pm
```

\(3\) finally, write code to count the number of positive and negative elasticity values for each model

::: {.callout-note appearance="simple" icon="false"}
## YOUR ANSWER:

```{r}
#| eval: false
#| echo: true
results_pm %>% 
```
:::

## Submission

::: callout-warning
Before you wrap up the assignment, make sure all documents are saved, staged, committed, and pushed to your repository on the course github site.

Remember -- you do **not** have to turn in an \*.html file. I will also **NOT** be pulling your work directly from your repository on the course website.
:::

## Grading

Total points available: 0 points.

| Component | Points |
|-----------|--------|
| Ex 1 - 2  | 0      |
